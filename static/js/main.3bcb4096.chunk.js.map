{"version":3,"sources":["components/gameplay/index.js","components/title-page/index.js","App.js","serviceWorker.js","index.js"],"names":["tiedCount","checker","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","index","newBoard","state","board","winner","gameOver","player","setState","gameWinner","matchTied","winnerExists","champion","tied","val","document","getElementById","innerHTML","style","display","clearInterval","interval","_","combinations","length","_combinations$index","slicedToArray","a","b","c","p1","p2","console","log","Array","fill","check","disqualify","timer","sessionStorage","getItem","JSON","parse","setTime","nextProps","nextState","setItem","_this2","setInterval","prevState","checkValue","clear","window","location","replace","_this3","box","map","react_default","createElement","className","key","onClick","resetTime","Row","Col","xs","lg","id","md","startAgain","httpEquiv","content","Component","Home","src","alt","ButtonToolbar","react_router_dom","to","Button","variant","App","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bcb4096.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Row,Col} from 'react-bootstrap';\nimport './style.css';\n\nvar tiedCount = 0,checker = 1;\n\nclass Game extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      board : Array(9).fill(null),\n      check : Array(9).fill(1),\n      player : \"X\",\n      p1 :  0,\n      p2 :  0,\n      tied: 0,\n      winner:0,\n      val:0,\n      disqualify:0,\n      timer : 10,\n      gameOver:true,\n    };\n\n  }\n\n\n  handleClick = index => {\n    let newBoard = this.state.board;\n    if(newBoard[index] === null && !this.state.winner && this.state.gameOver){  \n      newBoard[index] = this.state.player;\n      tiedCount += 1;\n      this.setState({board:newBoard,player:this.state.player === \"X\" ? \"O\" : \"X\"})\n      this.gameWinner();  \n    }   \n    if(tiedCount === 9 && this.state.gameOver && checker){\n      this.matchTied(this.state.gameOver);\n      this.setState({gameOver:false});\n    }\n  }\n\n\n  matchTied = (winnerExists,champion) =>{\n    if(winnerExists){\n      this.setState({tied:this.state.tied + 1,val:1});\n      document.getElementById(\"final\").innerHTML = \" Match Tied\";\n      document.getElementById(\"timer\").style.display = \"none\";\n      clearInterval(this.interval);\n    }\n    else{\n       document.getElementById(\"final\").innerHTML = champion + \" won this round\" ;\n        this.setState({val:1});\n        clearInterval(this.interval)\n        document.getElementById(\"timer\").style.display = \"none\";\n    }\n  }\n\n\n  gameWinner = _ => {\n    let combinations = [ [0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6] ]\n    let champion;\n    for (var index = 0; index < combinations.length; index++) {\n      const [a,b,c] = combinations[index];\n      if(this.state.board[a] && this.state.board[a] === this.state.board[b] && \n        this.state.board[a] === this.state.board[c]){\n        \n        if(this.state.player === \"X\"){\n          champion = \"Player 1\";\n          this.setState({p1:this.state.p1 + 1})\n        }\n        else{\n          champion = \"Player2\";\n          this.setState({p2:this.state.p2 + 1});\n        }\n        checker = 0;\n         this.setState({gameOver: false}, () => {\n            console.log(this.state.gameOver);\n            this.matchTied(this.state.gameOver,champion);\n        });  \n      }   \n    } \n  }\n\n \n  componentWillMount(){\n    sessionStorage.getItem('player1') && sessionStorage.getItem('tied') \n    && sessionStorage.getItem('player2') && \n    this.setState({\n      p1:JSON.parse(sessionStorage.getItem('player1')),\n      tied:JSON.parse(sessionStorage.getItem('tied')),\n      p2:JSON.parse(sessionStorage.getItem('player2')),\n    })\n  } \n\n\n  componentDidMount(){\n     this.setTime();\n  }\n\n\n  componentWillUpdate(nextProps,nextState){\n    sessionStorage.setItem('player1',nextState.p1);\n    sessionStorage.setItem('tied',nextState.tied);\n    sessionStorage.setItem('player2',nextState.p2);\n  }\n\n\n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n\n\n  setTime(){\n    this.interval = setInterval(() => {\n      if(this.state.timer > 0)\n        this.setState(prevState =>({timer:prevState.timer - 1}))\n      else{\n        clearInterval(this.interval);\n        if(this.state.player === \"X\"){\n          document.getElementById(\"result\").innerHTML = \"Player 1 is disqualified. <span>Player 2 wins.</span>\";\n        }\n        else{\n          document.getElementById(\"result\").innerHTML = \"Player 2 is disqualified. <span>Player 1 wins.</span>\";\n        }\n        document.getElementById(\"h\").style.display = \"none\";\n        this.setState({gameOver:false,disqualify:1});\n      }\n    },1000)  \n  }\n\n\n  resetTime(index){\n    let checkValue = this.state.check\n    if(this.state.board[index] && this.state.check[index] ){\n          checkValue[index] = 0;\n         this.setState({timer:10})\n    }\n  }\n\n\n  startAgain(){\n    sessionStorage.clear();\n    this.state.disqualify = 0;\n    window.location.replace(\"https://rohanajith.github.io/Tic-Tac-Toe/#/\")\n  }\n\n\nrender() {\n     \n    const box = this.state.board.map((box,index) => \n      <div className =\"box\" key={index} \n      onClick = {() => {this.handleClick(index); this.resetTime(index)}}>{box}</div>)\n\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n      <div className = \"options\">\n        <Row className=\"justify-content-md-center\">\n          <Col><div className = \"board\">{box}</div></Col>\n          <Col  xs lg=\"2\" className = \"font\" > Player 1<Col>{this.state.p1}</Col>\n            <p id=\"timer\">Timer  : <span id=\"timerValue\">{ this.state.timer}</span></p>\n          </Col>\n          <Col className = \"font\" md=\"auto\">Tied<Col>{this.state.tied}</Col></Col>\n          <Col className = \"font\" xs lg=\"2\">Player 2<Col>{this.state.p2}</Col></Col>\n        </Row>\n      </div>\n      <div id=\"final\"></div>\n      <div id=\"result\"></div>\n      <span id=\"h\">{this.state.disqualify === 1 && setInterval(() => {this.startAgain()},2000)}</span>\n      {this.state.val === 1 && <meta httpEquiv=\"refresh\" content=\"4\" ></meta> }\n    </div>\n  );\n}\n}\n\nexport default Game;\n\n","import React, {Component} from 'react';\nimport {ButtonToolbar,Button} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nimport './style.css';\n\n\nclass Home extends Component{\nrender() {\n  return (\n    <div className=\"App\">\n     <img src = \"https://i.pinimg.com/originals/f0/df/fd/f0dffdcf873936786b4ee8b518521a5a.jpg\" alt=\"bg\"/>\n       <div className=\"centered\">Tic Tac Toe\n       <ButtonToolbar>\n       \t<Link to=\"/game\"><Button variant=\"primary\">Play Game</Button></Link>\n       \t</ButtonToolbar>\n       </div>\n    </div>\n  );\n}\n}\n\nexport default Home;\n\n","import React from 'react';\nimport Game from './components/gameplay/index';\nimport Home from './components/title-page/index';\nimport { HashRouter, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <HashRouter>\n    <div className=\"App\">\n      <Route exact path = \"/\" component = {Home}></Route>\n      <Route path = \"/game\" component = {Game}></Route>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}